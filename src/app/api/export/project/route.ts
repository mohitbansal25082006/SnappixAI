import { NextRequest, NextResponse } from 'next/server'
import { auth } from '@clerk/nextjs/server'
import { db } from '@/lib/db'
import JSZip from 'jszip'

export async function POST(request: NextRequest) {
  try {
    const { userId } = await auth()
    if (!userId) return NextResponse.json({ error: 'Unauthorized' }, { status: 401 })

    const { projectId, format } = await request.json()

    const project = await db.project.findFirst({
      where: { id: projectId, userId },
      include: {
        components: {
          include: { versions: true }
        }
      }
    })

    if (!project) {
      return NextResponse.json({ error: 'Project not found' }, { status: 404 })
    }

    const zip = new JSZip()
    
    // Create project structure
    const srcFolder = zip.folder('src')
    const componentsFolder = srcFolder?.folder('components')
    
    // Generate all components
    project.components.forEach(component => {
      const componentName = component.name.replace(/\s+/g, '')
      componentsFolder?.file(`${componentName}.tsx`, component.code)
    })

    // Generate index file
    const indexContent = project.components.map(c => 
      `export { default as ${c.name.replace(/\s+/g, '')} } from './components/${c.name.replace(/\s+/g, '')}'`
    ).join('\n')
    srcFolder?.file('index.ts', indexContent)

    // Generate package.json
    const packageJson = {
      name: `@snappix/${project.name.toLowerCase().replace(/\s+/g, '-')}`,
      version: "1.0.0",
      description: `Design system components from ${project.name}`,
      main: "dist/index.js",
      types: "dist/index.d.ts",
      scripts: {
        build: "tsc && rollup -c",
        dev: "rollup -c -w"
      },
      peerDependencies: {
        react: "^18.0.0",
        "react-dom": "^18.0.0"
      }
    }
    zip.file('package.json', JSON.stringify(packageJson, null, 2))

    // README
    const readme = `# ${project.name}

Complete design system generated by **Snappix**

## Components
${project.components.map(c => `- ${c.name}`).join('\n')}

## Installation
\`\`\`bash
npm install @snappix/${project.name.toLowerCase().replace(/\s+/g, '-')}
\`\`\`

## Usage
\`\`\`tsx
import { Button } from '@snappix/${project.name.toLowerCase().replace(/\s+/g, '-')}'
\`\`\`
`
    zip.file('README.md', readme)

    const zipBlob = await zip.generateAsync({ type: 'blob' })
    
    return new NextResponse(zipBlob, {
      headers: {
        'Content-Type': 'application/zip',
        'Content-Disposition': `attachment; filename="${project.name}-design-system.zip"`
      }
    })
  } catch (error) {
    console.error('Bulk export error:', error)
    return NextResponse.json({ error: 'Export failed' }, { status: 500 })
  }
}